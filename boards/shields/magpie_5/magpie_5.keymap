// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define BASE 0
#define NUFU 1
#define NAV  2
#define MACR 3
#define SNIP 4
#define SCRL 5
#define NUF2 6

//Shortened key definitions
#define NF1 &lt NUFU RALT
#define NF2 &lt NUF2 LBKT
#define sft &soft_off

#define mlft &mmv MOVE_LEFT
#define mrgt &mmv MOVE_RIGHT
#define mup  &mmv MOVE_UP
#define mdwn &mmv MOVE_DOWN
#define btclr &bt BT_CLR
#define btcall &bt BT_CLR_ALL

#define bt0 &bt BT_SEL 0
#define bt1 &bt BT_SEL 1
#define bt2 &bt BT_SEL 2
#define bt3 &bt BT_SEL 3
#define bt4 &bt BT_SEL 4

#define mscup &msc SCRL_UP
#define mscdn &msc SCRL_DOWN
#define msclft &msc SCRL_LEFT
#define mscrgt &msc SCRL_RIGHT

#define BCKP BACKSPACE
#define DELT DELETE
#define SMCL SEMICOLON
#define COMM COMMA
#define SLSH SLASH
#define ENTR ENTER
#define GRV GRAVE
#define SPCE SPACE

#define PRCN PRCNT
#define CART CARET
#define MINS MINUS
#define EQUL EQUAL
#define UNDR UNDER

#define PEUP PAGE_UP
#define PEDN PAGE_DOWN
#define PREV K_PREV
#define NEXT K_NEXT
#define RGHT RIGHT
#define STOP C_STOP

#define BRDN C_BRI_DEC
#define BRUP C_BRI_INC

&sl {
	release-after-ms = <250>;
};

&mt {
	tapping-term-ms = <200>;
	require-prior-idle-ms = <150>;
};

&msc {
	acceleration-exponent = <1>;      // 0
	time-to-max-speed-ms = <40>;      // 500
	delay-ms = <0>;                   // 10
};

&soft_off {
	hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

/ {
	combos
	{
		compatible = "zmk,combos";
		combo_enter {
			timeout-ms = <50>;
			key-positions = <62 64>;
			bindings = <&kp ENTER>;
		};
	};
	
	keymap {
		compatible = "zmk,keymap";

		Base {
			bindings = <
			&none &kp ESC   &kp N1   &kp N2    &kp N3   &kp N4   &kp N5      &mkp LCLK  &kp N6 &kp N7 &kp N8   &kp N9  &kp N0   &kp BCKP
			&none &kp TAB   &kp Q    &kp W     &kp E    &kp R    &kp T       &mkp RCLK  &kp Y  &kp U  &kp I    &kp O   &kp P    &kp BSLH
			&none &kp LSHFT &kp A    &kp S     &kp D    &kp F    &kp G       &mkp MCLK  &kp H  &kp J  &kp K    &kp L   &kp SMCL &kp APOS
			&none &kp LCTRL &kp Z    &kp X     &kp C    &kp V    &kp B       &tog MACR  &kp N  &kp M  &kp COMM &kp DOT &kp SLSH &kp ENTR
			&none &mo SNIP  &mo SCRL &kp GRV   &kp LALT &sk LGUI &kp SPCE    &none      NF1    NF2    &kp RBKT sft     &mo NAV  &trans
			>;
			sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
		};
		
		NuFu {
			bindings = <
			&none &trans  &trans   &trans &trans   &trans   &trans     &trans &trans   &trans    &trans   &trans   &trans   &trans
			&none &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCN   &trans &kp CART &kp AMPS  &kp STAR &kp LPAR &kp RPAR &kp MINS
			&none &trans  &kp N1   &kp N2 &kp N3   &kp N4   &kp N5     &trans &kp N6   &kp N7    &kp N8   &kp N9   &kp N0   &kp EQUL
			&none &trans  &kp F1   &kp F2 &kp F3   &kp F4   &kp F5     &none  &kp F6   &kp F7    &kp F8   &kp F9   &kp F10  &kp PLUS
			&none &trans  &kp F12  &trans &trans   &kp CAPS &kp DOT    &none  &trans   &trans    &trans   &none    &kp F11  &kp UNDR
			>;
		};
		
		Nav {
			bindings = <
			&none &trans &trans   &trans   &trans   &trans   &trans    &trans &trans    &trans    &trans    &trans &trans &trans
			&none &trans &kp HOME &kp UP   &kp PEUP &kp PREV &kp NEXT  &trans &mkp LCLK &mkp RCLK &mkp MCLK &trans &trans &trans
			&none &trans &kp LEFT &kp DOWN &kp RGHT &kp K_PP &kp STOP  &trans mlft      mdwn      mup       mrgt   &trans btclr
			&none &trans &kp END  &trans   &kp PEDN &kp BRDN &kp BRUP  &none  bt0       bt1       bt2       bt3    bt4    &trans
			&none &trans &trans   &trans   &trans   &kp VOLD &kp VOLU  &none  msclft    mscdn     mscup     mscrgt &trans btcall
			>;
			sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
		};
		
		Macro {
			bindings = <
			&none &none &none &none &none &none &none   &none  &kp F13 &kp F14    &kp KP_NUM &kp KP_SLASH &kp KP_MULTIPLY &kp KP_MINUS
			&none &none &none &none &none &none &none   &none  &kp F16 &kp F17    &kp KP_N7  &kp KP_N8    &kp KP_N9       &kp KP_PLUS
			&none &none &none &none &none &none &none   &none  &kp F18 &kp K_EXEC &kp KP_N3  &kp KP_N4    &kp KP_N6       &kp KP_EQUAL
			&none &none &none &none &none &none &none   &trans &kp F20 &kp F21    &kp KP_N1  &kp KP_N2    &kp KP_N3       &kp KP_ENTER
			&none &none &none &none &none &none &none   &none  &kp F22 &kp F23    &kp K_HELP &kp KP_N0    &kp KP_DOT      &kp K_APP
			>;
		};
		
		Snipe {
			bindings = <
			&trans &trans &trans &trans &trans &trans &trans   &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans   &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans   &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans   &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans   &trans  &trans &trans &trans &trans &trans &trans
			>;
		};
		
		Scroll {
			bindings = <
			&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans &trans
			>;
		};
		
		Nufu2 {
			bindings = <
			&trans &trans &trans   &trans   &trans   &trans   &trans     &trans     &trans          &trans   &trans     &trans &trans &trans
			&trans &trans &trans   &trans   &trans   &trans   &kp GRAVE  &kp PSCRN  &kp PAUSE_BREAK &kp SLCK &kp INSERT &trans &trans &trans
			&trans &trans &kp MINS &kp EQUL &kp PLUS &kp UNDR &kp TILDE  &trans     &trans          &trans   &trans     &trans &trans &trans
			&trans &trans &trans   &trans   &trans   &trans   &trans     &trans     &trans          &trans   &trans     &trans &trans &trans
			&trans &trans &trans   &trans   &kp DELT &kp BCKP &kp ESC    &trans     &trans          &trans   &trans     &trans &trans &trans
			>;
		};
	};
};
